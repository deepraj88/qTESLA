# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 47
set hasByteEnable 0
set MemName kmxGauss_cdt_v
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 31
set AddrRange 532
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData { "0000000000000000000000000000000" "0000000000000000000000000000000" "0000000000000000000000000000000" "0000000000000000000000000000000" "0000101000000011001111100100011" "0100001010110101010100010000110" "0100110011010111101100001001010" "0011001011000100101001010001011" "0001110111110001001001101101110" "0100011101111111100011110010001" "0110001101100011001000001000010" "1010000001101010001101010100000" "0011000110010110000001111111100" "0000111010001101100001001010110" "1000000011100000010001011101000" "0110011010011111001010010111011" "0100010011000011100000101011110" "1000101001001111010101111110001" "1111100110011110110010001000001" "0000000111011110110110101000110" "0101011101001110100100111111110" "1001010001101110001100001010110" "0111010001011001010100110010111" "1010001010100111100101100001010" "0110100100010000101100110001010" "0000100001101011011001011010111" "1001101110110011001000010101110" "0001110011101000010100111000000" "0111100111101000101111000100010" "0000001111000011011111101001001" "1001100111111110101101011101110" "0100110101011100010100000001100" "1000100110111011100111011001011" "1011011111010110001111011011001" "0101011110101111001011110111111" "0101001000110010010110101100101" "1001100001110100110000010001110" "0100010111101111011110110010101" "1111011101011110101111001001010" "1100001000111101000101000101110" "1010011000000110001100110100100" "0101010101010110110100011000101" "0010011010110111001101100011001" "1111101000110011111111110100011" "1011001001101000100010000010001" "1101111101110100111010010001011" "1000100000010011101111101110001" "1110110110000101010010011000010" "1011110110011010100001010100011" "0010010001001011000111001101100" "1110000101010111101100010111111" "0110011111110001101011011111000" "1100011110100000100110010111100" "1001011000000111010001001011010" "0010111100010010011101011111101" "0000000010100010010110100111100" "1101000010000100001011001100001" "0100111100111001101101111110011" "1100100101110110011100110001101" "1100000001110111101101001010010" "1101100001010010110101001100100" "1011000110101000000000100100101" "1011101010111100011001000000100" "1000101100101001000110100000011" "1101111100011101011110011011100" "0101100101111001001101101101100" "0000111100011011011110100100100" "0010001000101010011011101000010" "1110010011110111011101110100010" "1100100011001001110010010000001" "1101100000000111010010010100100" "1001111101110111111011001011000" "1110100111110101110001000100001" "0110010011000010100111001001011" "1001011001110011001011000100101" "1010010100001001101100111001000" "1110111000101110001010010111110" "1100100110111100111100000010111" "1011011101011111111001011000000" "0111010011101011011000000100110" "1111000110110110100011101001100" "1100100100100000110101101001010" "0110110110000010101110100011010" "1001001101010101010000011111100" "1111010010100100011000010111111" "0100001001101011001011111110010" "0111110110011000100111001111011" "1011111111111100010000111001010" "1111011100001100000110101101000" "0001101110100010111101011000010" "0110100110011100010100100010111" "0010011110100001101111000010101" "1111100100000000110111111111110" "1110000011010001110111110111101" "1100000001110111101110100000000" "0100100001010010010010000101001" "1111101010010100010000011101001" "0101101010110111100011100011011" "1000111000011110110010011001110" "1100011000100101001111110101111" "1111101111010110000101010010110" "0000000101001100101000000011100" "1001100010001100001101000010011" "1111001000011001010101110000110" "1111110011010100011000101000100" "1110101110010010011001001000010" "0010110000000100011010101110001" "0000110101101110001000100001011" "1111110110011011011010001010110" "1100110000110100111111000110101" "0010110001011100101010100011010" "1110101110110111001110110101001" "1111111000110101101011100011111" "0100000010100010110101100011111" "1011111111100000000101011100010" "1000011110111111111001001010100" "1111111010101100000111101000001" "0110011000000001101111001111100" "1001011100011110000011110011001" "1011100001111100100010101110100" "1111111100000110001011011000011" "0010010001001101110101011011011" "1010001110100001110000010110001" "1011000011100001001010010011011" "1111111101001010000000000111100" "0110001100000111111111010010110" "1010110101000110000000101011101" "1010100011100011100111000101001" "1111111101111100100101111001011" "0100011011111111011111010001000" "0000110000100100100111101100001" "0011000100110000111011111010000" "1111111110100001111101110111110" "1001001000000001010010101111011" "0010010001100011010011100101000" "0100001011100010011110101010001" "1111111110111101010100000101101" "1000010011001000110100010011100" "0001001000010111101010100101011" "0110101101100111110111101011000" "1111111111010001001000011110100" "1111111010000100111110001011001" "0111111111010100111011110100111" "1110110101101011100111011000100" "1111111111011111010110111001001" "0100011010101000110000111110010" "1110110010100110000111111100111" "1000101100010101111111011010110" "1111111111101001011110000111001" "1000111110101100010100110010110" "0001000000011000000010010101110" "1010101011110001110100100011101" "1111111111110000100101110100101" "1000100100111101010110010000100" "1000011110110000010011011111010" "0000001101011111100111100010101" "1111111111110101100011100111110" "1101000101100100111001000110111" "0010000001100101110001111111001" "1100011110111101101011000101000" "1111111111111000111111001000000" "1101100110111001110001110010001" "1110100110100101100011011100000" "1010110111101000011100111111010" "1111111111111011010101010010011" "0101010000010100101011110011111" "1001110001111111101011000111000" "1010101010101010100011111010000" "1111111111111100111011000001110" "1111101000011011010001100011001" "0000100101011101001111010001101" "1000111111110001011010000100100" "1111111111111101111111010011100" "0000000111001101111000100011000" "1011011000100101100011010011011" "1100011000001000101000110000100" "1111111111111110101100101011110" "0010011001010010110001001011010" "1111000100011001100011110011111" "1100001101101110010110010011100" "1111111111111111001010100011100" "1111100100101000111010101011011" "1111111000100000101010011011111" "1010111110101101110001101010001" "1111111111111111011110000010001" "0001101011000111101110110011001" "0010110111000011101111011101101" "1011111101001000111111111010110" "1111111111111111101010100111000" "1010110111111001001001111111000" "1001011111101101111010100011101" "1100101110100011111010000101111" "1111111111111111110010101001111" "0100110110100100101000110010110" "1001010111101010001001101110100" "1111010001111110010000001001101" "1111111111111111110111110000000" "0100101110001111000100100101011" "1011111110000000011011010110111" "1010110001111010010111011110101" "1111111111111111111010111100101" "0010111011110010111101110111001" "1001010111011010000100010000011" "1010101111101000111000010001110" "1111111111111111111100111011110" "0101100011110110101100001001000" "1100011110001111111110100001001" "1110001010001000101010110011100" "1111111111111111111110001010000" "0101111001000110110110000101101" "0000100101100111000101101011101" "1100111111000000011000100110110" "1111111111111111111110111001101" "1111100010111001000101010011001" "1000111011110000000011101000000" "0111100110011001111101110001001" "1111111111111111111111010110100" "0101110000111100100101000010001" "0110110011010101100100111111100" "0101111100111101000100001111100" "1111111111111111111111100111110" "0001111111010111101010001101111" "1101011110000011100111010000101" "1110010111100000110100111100111" "1111111111111111111111110001111" "1011011011011100100100010011110" "0101000011101010001100010010010" "1010110110001111000000010110101" "1111111111111111111111110111111" "1001001010111101001111001011111" "1111110101010100001101011001011" "0110101000110110000100001011111" "1111111111111111111111111011011" "0110000010101110110000001111011" "0101000111000111000010010100010" "1011100010100100101011010100000" "1111111111111111111111111101011" "0110000001101011100010110100011" "0010101101001111000101010110111" "0001111110001100111000011001111" "1111111111111111111111111110100" "0111111010011011000011110000000" "1100110110101010000110100110011" "1100011101101011100101100000000" "1111111111111111111111111111001" "1010010000100101101110011100010" "1101100110100000100010111010101" "0000111110111011110010100011110" "1111111111111111111111111111100" "1000010010111001110100010101000" "0000010111101000110001101111001" "1101001010000000100000101000001" "1111111111111111111111111111110" "0001110010010011001010001111111" "0001110000001111110101001110101" "0111011010110001101101111101010" "1111111111111111111111111111110" "1111110000111110011000010011011" "0101111000001110111100010100111" "0101101000110001110100010010110" "1111111111111111111111111111111" "0111010110111011100101010010001" "1011010001001001100001110010101" "1010110111010010111000011100111" "1111111111111111111111111111111" "1011011100010111000100101101001" "1110011110100000101100100010011" "1011001011110011100000111010101" "1111111111111111111111111111111" "1101100111101010000000000010110" "1001001011100001110101111111111" "1111011001011111000011101100000" "1111111111111111111111111111111" "1110110001001010101001001011100" "0001010111101111000100100101000" "0010010010111001011110001111110" "1111111111111111111111111111111" "1111010111100101101010001001011" "1000110000110011111011110110011" "0110001100010101111011011111100" "1111111111111111111111111111111" "1111101011011110101000110101111" "0011000110100111000110111010001" "1110011110001110101100000101000" "1111111111111111111111111111111" "1111110101101011010101000010110" "0100000101100010100100010111011" "0100011110110010101011011111000" "1111111111111111111111111111111" "1111111010110110110001111001000" "1111101110110110010101011011000" "0100111011100111110101010011000" "1111111111111111111111111111111" "1111111101011101011111001100111" "1100010100000010011111111101111" "1110011001011011011111100111011" "1111111111111111111111111111111" "1111111110110000100010001001111" "0101110000000110010001001110110" "1011011001010101111101000011001" "1111111111111111111111111111111" "1111111111011001100000011111010" "1010101111110001101001101100011" "0000111111101111010010001110000" "1111111111111111111111111111111" "1111111111101101100001111100010" "0110000110011111100110000010110" "0100001010101010000010000000011" "1111111111111111111111111111111" "1111111111110111001110001010000" "1011111101110111101110011010010" "0000110011000110101001101100101" "1111111111111111111111111111111" "1111111111111011110111011101111" "0001101010110101010010110110010" "1110101011011101111100000001010" "1111111111111111111111111111111" "1111111111111110000100100111111" "0001010111011111010100111001011" "1110001101110000101111001101001" "1111111111111111111111111111111" "1111111111111111000111000000000" "0001001111100110110010011110110" "0110100101000010111101011011001" "1111111111111111111111111111111" "1111111111111111100101111010100" "0011100110101010001001110100100" "1011100101100011110001001101001" "1111111111111111111111111111111" "1111111111111111110100001011001" "1000000000001000110100110101100" "1110101001100001010111000101101" "1111111111111111111111111111111" "1111111111111111111010101100001" "0011111100010011000101111011011" "0000100100000100110000100100010" "1111111111111111111111111111111" "1111111111111111111101101000110" "1010110100101111001011101111110" "1111100010001111010010111111100" "1111111111111111111111111111111" "1111111111111111111110111101011" "0010100110001111010110100011011" "1101101111111001110001101011010" "1111111111111111111111111111111" "1111111111111111111111100010111" "0111000111100101001111000000000" "0010101100001100100110000100110" "1111111111111111111111111111111" "1111111111111111111111110011011" "0111011000001010011110101000101" "1100111110100000100111111000101" "1111111111111111111111111111111" "1111111111111111111111111010100" "1111001000001100000100111000101" "1011110100101101101100001000000" "1111111111111111111111111111111" "1111111111111111111111111101101" "1011110010011011101010111000111" "1111101100011110011100010001010" "1111111111111111111111111111111" "1111111111111111111111111111000" "0101001110000000101100101100011" "0000110010001011110000100111101" "1111111111111111111111111111111" "1111111111111111111111111111100" "1100111001011110010010100001000" "0111111110010110101110000100110" "1111111111111111111111111111111" "1111111111111111111111111111110" "1010111011101010111101000010011" "1110011111100001011011111001110" "1111111111111111111111111111111" "1111111111111111111111111111111" "0111011001011000111001110100001" "1101011101000101011010100000000" "1111111111111111111111111111111" "1111111111111111111111111111111" "1100100001010001110001100111000" "1010000001001100111000110011100" "1111111111111111111111111111111" "1111111111111111111111111111111" "1110100110110000101111110101000" "1011101100111100101001100000001" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111011100100101010101100000000" "0000100010011001001010111111010" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111110010000100111011101111111" "1110000010101011010010010100110" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111010100101000001100010111" "0011110011000010001101100100110" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111101111010001010110111110" "1011001000111100101111111010001" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111001100110111101100110" "1001110110101000010110010110101" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111101100101001101010111" "0111100000100011111010110000001" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111000101111110100110" "0010011101001110010110001001100" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111101010011101010001" "0000000100001111110000101110011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111000000100111100" "1101000100101100011010010000101" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111101000111010010" "1100111000100001010010000001001" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111110111101010110" "1010110000100010010010000010100" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111101000001011" "1001011000000110100111011110010" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111110111100100" "0101100110010000011010100010011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111101000010" "1100011000111111001101111000111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111110111110" "0100011101100011100000111101100" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111101001" "0110010000000100011101000001011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111000" "0100101110111011100010110010001" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111101" "0110011001010100000000000000110" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "0010000101110101100001100000010" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1011011001001111000111000110100" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1110011111010100100010001001111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111100000100101110111011001000" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111110101111001001010110101111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111100110001110101101000011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111110111110111010100101000" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111101011101001011111011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111001101100100101010" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111110000100001111011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111011010011001010" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111110100101011101" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111100101000000" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111000000010" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111101101011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111010101" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111110011" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111100" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" "1111111111111111111111111111111" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 15
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 48
set hasByteEnable 0
set MemName kmxGauss_sampk
set CoreName ap_simcore_mem
set PortList { 2 2 }
set DataWd 32
set AddrRange 2580
set AddrWd 12
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 15
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 49
set hasByteEnable 0
set MemName kmxGauss_sampk_temp
set CoreName ap_simcore_mem
set PortList { 2 2 }
set DataWd 8
set AddrRange 10320
set AddrWd 14
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 15
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 50
set hasByteEnable 0
set MemName kmxGauss_sampg
set CoreName ap_simcore_mem
set PortList { 2 2 }
set DataWd 32
set AddrRange 645
set AddrWd 10
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 15
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 51 \
    name z \
    reset_level 1 \
    sync_rst true \
    dir O \
    corename z \
    op interface \
    ports { z_address0 { O 10 vector } z_ce0 { O 1 bit } z_we0 { O 1 bit } z_d0 { O 16 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'z'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 53 \
    name seed \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename seed \
    op interface \
    ports { seed_address0 { O 7 vector } seed_ce0 { O 1 bit } seed_q0 { I 8 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'seed'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 52 \
    name z_offset \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_z_offset \
    op interface \
    ports { z_offset { I 11 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 54 \
    name seed_offset \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_seed_offset \
    op interface \
    ports { seed_offset { I 8 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 55 \
    name nonce \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_nonce \
    op interface \
    ports { nonce { I 32 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


